@page "/projects"
@using Data.Database
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

@if (projects != null)
{
    <h3>Projects:</h3>

    <table class="table">
        <thead>
            <tr>
                <th>Project name</th>
                <th>Full name</th>
                <th>Lab</th>
                <th>Description</th>
                <th>Originality pct.</th>
                <th>Date</th>
                <th>Git URL</th>
                <th>Disc path</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in projects)
            {
                <tr>
                    <td>@project.Name</td>
                    <td>@project.Student.FullName</td>
                    <td>@project.ProjectType.Name</td>
                    <td>@project.ProjectType.Description</td>
                    <td>@project.OriginalityPercentage</td>
                    <td>@project.DateOfPassing</td>
                    @if (!string.IsNullOrEmpty(@project.GitUrl))
                    {
                        <td>@project.GitUrl</td>
                    }
                    else
                    {
                        <td style="color:darkgray">No</td>
                    }
                    @if (!string.IsNullOrEmpty(@project.PathOnDisc))
                    {
                        <td>@project.PathOnDisc</td>
                    }
                    else
                    {
                        <td style="color:darkgray">No</td>
                    }
                    <td>
                        <a href="@GetHrefForEditPage(project)">Edit</a>
                    </td>
                    <td>
                        <a href="projects/" @onclick="(() => DeleteElement(project.Id))">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="NavigateToAddProjectPage">
        Add
    </button>
}
else
{
    <OnDataLoading />
}

@code {
    private Project[]? projects { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetProjectsData();
    }

    private async Task GetProjectsData()
    {
        projects = await HttpClient.GetFromJsonAsync<Project[]>
            (NavigationManager.BaseUri + "api/data/getprojects");
    }

    private async Task DeleteElement(int id)
    {
        var response = await HttpClient.DeleteAsync(NavigationManager.BaseUri +
            "api/data/deleteproject/" + id);
        if (response.ReasonPhrase == "OK")
        {
            await GetProjectsData();
        }
    }

    private string GetHrefForEditPage(Project project)
    {
        return "projects/" + project.Id;
    }

    private void NavigateToAddProjectPage()
    {
        NavigationManager.NavigateTo("projects/add_project");
    }
}
