@page "/projects/add_project"
@using Data.Database
@using Microsoft.Extensions.Logging
@using PlagiarismApp.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

@if (labWorks != null && students != null)
{
    <h3>Adding a new project:</h3>

    <EditForm Model="@_model" OnValidSubmit="@PostProject">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Name:</label>
        </div>
        <div class="form-floating" style="margin:10px">
            <InputText id="name" @bind-Value="_model.Name" />
        </div>
        <div>
            <label>Git URL:</label>
        </div>
        <div class="form-floating" style="margin:10px">
            <InputText id="gitUrl" @bind-Value="_model.GitUrl" />
        </div>
        <div>
            <label>Path on disc:</label>
        </div>
        <div class="form-floating" style="margin:10px">
            <InputText id="pathOnDisc" @bind-Value="_model.PathOnDisc" />
        </div>
        <div>
            <label>Student:</label>
        </div>
        <div class="form-floating" style="margin:10px">
            <select @bind="_model.SelectedStudentId">
                <option value=""></option>
                @foreach (var student in students)
                {
                    <option value="@student.Id">
                        @(student.Group.Name + " " + student.FullName)
                    </option>
                }
            </select>
        </div>
        <div>
            <label>Lab work:</label>
        </div>
        <div class="form-floating" style="margin:10px">
            <select @bind="_model.SelectedLabWorkId">
                <option value=""></option>
                @foreach (var labWork in labWorks)
                {
                    <option value="@labWork.Id">
                        @(labWork.Name + " " + labWork.Description)
                    </option>
                }
            </select>
        </div>

        <div class="form-floating" style="margin:10px">
            <button type="submit" class="btn btn-primary">
                Insert
            </button>
            <button type="reset" class="btn btn-primary" @onclick="Cancel">
                Cancel
            </button>
        </div>

    </EditForm>
}
else
{
    <OnDataLoading />
}

@code {
    private ProjectModel _model = new();

    private LabWork[]? labWorks;

    private Student[]? students;

    protected override async Task OnInitializedAsync()
    {
        await InitializeLabWorks();
        await InitializeStudents();
    }

    private async Task InitializeLabWorks()
    {
        labWorks = await HttpClient.GetFromJsonAsync<LabWork[]>
            (NavigationManager.BaseUri + "api/data/getlabworks/");
    }

    private async Task InitializeStudents()
    {
        students = await HttpClient.GetFromJsonAsync<Student[]>
            (NavigationManager.BaseUri + "api/data/getstudents/");
    }

    private async Task PostProject()
    {
        Project project = CreateProject();
        var response = await HttpClient.PostAsJsonAsync<Project>(
            NavigationManager.BaseUri + "api/data/postproject/" +
            project.StudentId + '/' + project.LabWorkId, project);
        NavigationManager.NavigateTo("/projects");
    }

    private Project CreateProject()
    {
        Project newProject = new Project()
            {
                Name = _model.Name,
                GitUrl = _model.GitUrl,
                PathOnDisc = _model.PathOnDisc,
                StudentId = _model.SelectedStudentId,
                LabWorkId = _model.SelectedLabWorkId
            };
        return newProject;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/projects");
    }
}