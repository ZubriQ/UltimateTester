@page "/lab_works/add_lab_work"
@using Data.Database
@using Microsoft.Extensions.Logging
@using PlagiarismApp.Models
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h3>Adding a new lab work:</h3>

<EditForm Model="@_model" OnValidSubmit="@CreateAndSaveLabWork">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Name:</label>
    </div>
    <div class="form-floating" style="margin:10px">
        <InputText id="name" @bind-Value="_model.Name" />
    </div>
    <div>
        <label>Description:</label>
    </div>
    <div class="form-floating" style="margin:10px">
        <InputText id="description" @bind-Value="_model.Description" />
    </div>
    <div class="form-floating" style="margin:10px">
        <button type="submit" class="btn btn-primary">Insert</button>
        <button type="reset" class="btn btn-primary" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>

@code {
    private LabWorkModel _model = new();

    private async Task CreateAndSaveLabWork()
    {
        LabWork newLabWork = new LabWork()
            {
                Name = _model.Name,
                Description = _model.Description
            };
        await PostLabWork(newLabWork);
        NavigationManager.NavigateTo("/lab_works");
    }

    private async Task PostLabWork(LabWork labWork)
    {
        var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri +
                                                        "api/data/postlabwork", labWork);
    }

    private LabWork CreateLabWork()
    {
        return new LabWork()
            {
                Name = _model.Name,
                Description = _model.Description
            };
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/lab_works");
    }
}
